git:
-----
to find the last change in a given file since a given version:
git blame a2c0ce44744039a365b61cc6f81e1528ee5b8478~1 -- py/strato/master/api/openstackapi/types.py
git reflog - 
git log -p origin/master..HEAD

stuck git patch:
This command will add the rebase "<<<<<<" signs:
    patch -p1 --merge --no-backup-if-mismatch < 0001-BK-1119.patch

afterwards, can run:
    git add <modified file 1> <modified file 2> <modified file 3>

and finally, run:
    git am --resolve


Define a new repository:

    Add another remote origin named "roei":
    git remote add roei https://github.com/roei-stratoscale/northbound.git
    
    !!!! FORCE push to the repository
    git push -f roei HEAD:master

    Push to a specific branch
    git push roei HEAD:stratocli_changes

RPMs:
-------
After running the 'make' command - rpms are under ./build/

python rpm extract:
rpm2cpio ../strato_api-1-0.x86_64.rpm | cpio -idmv




Network and HTTP:
-----------------
port forwarding:
* show port forwarding table: sudo iptables-save 



ssh tunneling: ssh -L <local port>:<remote ip from forwarded server>:<remote port from forwarded server> <forwarded server>
  ssh -L 3000:192.168.122.254:3000 strato@rack02-server05
  ssh -L 7000:192.168.122.254:7000 strato@rack02-server05

After ssh tunneling, you can run the cli locally (main.py uses port 7000):
  ./env python ../northbound/py/strato/northbound/cli/main.py

netstat:
  netstat -a -n --tcp
  netstat -l -n --tcp -p



CURL:
------
From the controller:
run the command to the restapi:
  curl http://0.0.0.0:7000/v1/VMs

create a new VM from REST:
  curl http://localhost:7000/v1/VMs -d "name=shahar4&image-id=69e756e2-9c54-4a14-9b7b-268660e44827"
  curl -X POST -v http://localhost:7000/v1/VMs?name=shahar11name=shahar10&image-id=69e756e2-9c54-4a14-9b7b



racktests:
------------------
from monkey:    make phystest REGEXP="--regex 200_concurrent_actions.py"

to reade the logs nicely:
sh/strato-log --noDebug logs.racktest/racktests.REST.200_concurrent_actions/test.stratolog
To get list of nodes:
sh/strato-log --noDebug logs.racktest/racktests.REST.200_concurrent_actions/test.stratolog | grep "Host allocated"

to log in to a node with port 2079:
/home/roei/work/pydonkey/tools/sshnode.py 2079

copy a file to the rackattack provider (password: rackattack):
scp -P 2079 build/rpms/* root@rackattack-provider:

virt from cli:
show all vms: virsh -c qemu:///system list --all
show specific xml for vm: virsh -c qemu:///system dumpxml <name
	example: virsh -c qemu:///system dumpxml strato-openstackcontroller-vanilla 


Mount a vanila (like ISO)
dc> ./env python /home/roei/roei/mount.py /home/roei/work/dc/vmclones/strato-openstackagent-vanilla.qcow2


pullrequest:
from dc: pullequest somename
will create a new remote branch in dc: pullrequest_roei_somename_<timestamp>
to remove this branch from the remote: git push origin :pullrequest_roei_somename_<timestamp>


debugging python (shahar style):
--------------------------------
don't run dc/env
run: UPSETO_JOIN_PYTHON_NAMESPACES=yes PYTHONPATH=py ipython
start importing packages, use package __path__ & __file__ to investigate imported files


unittests:
------------
run a single unittest (can add pdb to the unittest):
for example, run the test_restfuladapter.py test in northbound/ : 
STRATO_CONF_DIRECTORY=/etc/stratoscale UPSETO_JOIN_PYTHON_NAMESPACES=yes PYTHONPATH="py" python ../voodoo-mock/pytest/pytestrunner.py --cui `find . -name 'test_main*.py'`

using rpdb:
add: import rpdb; rpdb.set_trace()
STRATO_CONF_DIRECTORY=/etc/stratoscale UPSETO_JOIN_PYTHON_NAMESPACES=yes PYTHONPATH=py:../consulate python ../voodoo-mock/pytest/pytestharness.py `find . -name 'test_stratocmd.py'`
from another prompt: nc 127.0.0.1 4444

libvirt:
----------
get VM list:
  virsh -c qemu:///system
start a VM:  
  virsh -c qemu:///system start strato-vanialla
turn off VM:
  virsh -c qemu:///system shutdown strato-vanilla
print the VM XML:
  virsh -c qemu:///system dumpxml strato-vanilla



On the controller:
---------------------
login: ssh root@192.168.122.254
get permissions for cinder: source keystonerc_admin
run cinder commands: cinder <>
get nova list: nova list
get list of images: glance image-list


systemctl:
-----------
reload the deamon after installing new service rpm:  
systemctl daemon-reload
systemctl --system daemon-reload

check the service:
rpm -qi strato_api

check list of files per service:
rpm -ql strato_api

service file:
rpm -ql strato_api | grep '.service$'



racktests:

running a single racktest from monkey with ./env:
make phystest REGEXP="--regex 200_"

reading the logs nocely:
/home/roei/work2/dc/sh/strato-log --noDebug ../monkey/logs.racktest/racktests.REST.200_concurrent_actions/test.stratolog | vim -


osmosis
-------

Check if osmosis (solvent) has a given lable:
osmosis listlabels --objectStores=oberon:1010 | grep 2ba52c7d6a31f80baaa85e69c40c63ef1d784442

Undo removed lable from the local osmosis:
sudo osmosis checkout build/root solvent__rootfs-star__rootfs__2ba52c7d6a31f80baaa85e69c40c63ef1d784442__dirty
sudo osmosis checkin build/root solvent__rootfs-star__rootfs__2ba52c7d6a31f80baaa85e69c40c63ef1d784442__dirty --objectStores oberon:1010



On the controler:
------------------
Nova client is under: /usr/lib/python2.7/site-packages/novaclient/
